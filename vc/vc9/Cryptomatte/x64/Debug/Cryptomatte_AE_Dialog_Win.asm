; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.21022.08 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
_BSS	SEGMENT
hDllInstance DQ	01H DUP (?)
g_item_clicked DW 01H DUP (?)
_BSS	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
_DATA	SEGMENT
_bad_alloc_Message DQ FLAT:$SG20600
_DATA	ENDS
CONST	SEGMENT
$SG20600 DB	'bad allocation', 00H
	ORG $+1
$SG126586 DB	'.', 00H, '.', 00H, '\', 00H, '.', 00H, '.', 00H, '\', 00H
	DB	's', 00H, 'r', 00H, 'c', 00H, '\', 00H, 'a', 00H, 'f', 00H, 't'
	DB	00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'f', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 's', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n'
	DB	00H, '\', 00H, 'C', 00H, 'r', 00H, 'y', 00H, 'p', 00H, 't', 00H
	DB	'o', 00H, 'm', 00H, 'a', 00H, 't', 00H, 't', 00H, 'e', 00H, '_'
	DB	00H, 'A', 00H, 'E', 00H, '_', 00H, 'D', 00H, 'i', 00H, 'a', 00H
	DB	'l', 00H, 'o', 00H, 'g', 00H, '_', 00H, 'W', 00H, 'i', 00H, 'n'
	DB	00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H
	ORG $+6
$SG126587 DB	'c', 00H, 'o', 00H, 'p', 00H, 'i', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'l', 00H, 'e', 00H, 'n'
	DB	00H, ' ', 00H, '-', 00H, ' ', 00H, '1', 00H, 00H, 00H
$SG126625 DB	'DIALOG', 00H
CONST	ENDS
PUBLIC	?Cryptomatte_Dialog@@YA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00PEBDPEBX@Z ; Cryptomatte_Dialog
EXTRN	__imp_DialogBoxParamA:PROC
EXTRN	__imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z:PROC
pdata	SEGMENT
$pdata$?Cryptomatte_Dialog@@YA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00PEBDPEBX@Z DD imagerel $LN4
	DD	imagerel $LN4+208
	DD	imagerel $unwind$?Cryptomatte_Dialog@@YA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00PEBDPEBX@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?Cryptomatte_Dialog@@YA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00PEBDPEBX@Z DD 011801H
	DD	08218H
; Function compile flags: /Odtp
; File c:\users\brendan bolles\documents\development\proexr\src\aftereffects\win\cryptomatte_ae_dialog_win.cpp
xdata	ENDS
_TEXT	SEGMENT
status$ = 48
hit_ok$ = 52
layer$ = 80
selection$ = 88
manifest$ = 96
plugHndl$ = 104
mwnd$ = 112
?Cryptomatte_Dialog@@YA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00PEBDPEBX@Z PROC ; Cryptomatte_Dialog

; 112  : {

$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 113  : 	bool hit_ok = false;

	mov	BYTE PTR hit_ok$[rsp], 0

; 114  : 	
; 115  : 	// set globals
; 116  : 	g_layer = layer;

	mov	rdx, QWORD PTR layer$[rsp]
	lea	rcx, OFFSET FLAT:g_layer
	call	QWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z

; 117  : 	g_selection = selection;

	mov	rdx, QWORD PTR selection$[rsp]
	lea	rcx, OFFSET FLAT:g_selection
	call	QWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z

; 118  : 	g_manifest = manifest;

	mov	rdx, QWORD PTR manifest$[rsp]
	lea	rcx, OFFSET FLAT:g_manifest
	call	QWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z

; 119  : 
; 120  : 
; 121  : 	int status = DialogBox((HINSTANCE)hDllInstance, (LPSTR)"DIALOG", (HWND)mwnd, (DLGPROC)DialogProc);

	mov	QWORD PTR [rsp+32], 0
	lea	r9, OFFSET FLAT:?DialogProc@@YAHPEAUHWND__@@I_K_J@Z ; DialogProc
	mov	r8, QWORD PTR mwnd$[rsp]
	lea	rdx, OFFSET FLAT:$SG126625
	mov	rcx, QWORD PTR hDllInstance
	call	QWORD PTR __imp_DialogBoxParamA
	mov	DWORD PTR status$[rsp], eax

; 122  : 
; 123  : 
; 124  : 	if(g_item_clicked == DLOG_OK)

	movzx	eax, WORD PTR g_item_clicked
	cmp	eax, 1
	jne	SHORT $LN1@Cryptomatt

; 125  : 	{
; 126  : 		layer = g_layer;

	lea	rdx, OFFSET FLAT:g_layer
	mov	rcx, QWORD PTR layer$[rsp]
	call	QWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z

; 127  : 		selection = g_selection;

	lea	rdx, OFFSET FLAT:g_selection
	mov	rcx, QWORD PTR selection$[rsp]
	call	QWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z

; 128  : 		manifest = g_manifest;

	lea	rdx, OFFSET FLAT:g_manifest
	mov	rcx, QWORD PTR manifest$[rsp]
	call	QWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z

; 129  : 
; 130  : 		hit_ok = true;

	mov	BYTE PTR hit_ok$[rsp], 1
$LN1@Cryptomatt:

; 131  : 	}
; 132  : 
; 133  : 	return hit_ok;

	mov	al, BYTE PTR hit_ok$[rsp]

; 134  : }

	add	rsp, 72					; 00000048H
	ret	0
?Cryptomatte_Dialog@@YA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00PEBDPEBX@Z ENDP ; Cryptomatte_Dialog
_TEXT	ENDS
EXTRN	__imp_EndDialog:PROC
EXTRN	__imp_SetDlgItemTextA:PROC
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ:PROC
pdata	SEGMENT
$pdata$?DialogProc@@YAHPEAUHWND__@@I_K_J@Z DD imagerel ?DialogProc@@YAHPEAUHWND__@@I_K_J@Z
	DD	imagerel ?DialogProc@@YAHPEAUHWND__@@I_K_J@Z+328
	DD	imagerel $unwind$?DialogProc@@YAHPEAUHWND__@@I_K_J@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?DialogProc@@YAHPEAUHWND__@@I_K_J@Z DD 011701H
	DD	06217H
; Function compile flags: /Odtp
xdata	ENDS
_TEXT	SEGMENT
item_clicked$126601 = 36
tv64 = 40
tv87 = 44
hwndDlg$ = 64
message$ = 72
wParam$ = 80
lParam$ = 88
?DialogProc@@YAHPEAUHWND__@@I_K_J@Z PROC		; DialogProc

; 65   : { 

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 66   :     BOOL fError; 
; 67   : 
; 68   :     switch(message) 

	mov	eax, DWORD PTR message$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 272		; 00000110H
	je	SHORT $LN8@DialogProc
	cmp	DWORD PTR tv64[rsp], 273		; 00000111H
	je	SHORT $LN7@DialogProc
	jmp	$LN9@DialogProc
$LN8@DialogProc:

; 69   :     { 
; 70   : 		case WM_INITDIALOG:
; 71   : 
; 72   : 			SetDlgItemText(hwndDlg, DLOG_Layer_Text, g_layer.c_str());

	lea	rcx, OFFSET FLAT:g_layer
	call	QWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
	mov	r8, rax
	mov	edx, 3
	mov	rcx, QWORD PTR hwndDlg$[rsp]
	call	QWORD PTR __imp_SetDlgItemTextA

; 73   : 			SetDlgItemText(hwndDlg, DLOG_Selection_Text, g_selection.c_str());

	lea	rcx, OFFSET FLAT:g_selection
	call	QWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
	mov	r8, rax
	mov	edx, 4
	mov	rcx, QWORD PTR hwndDlg$[rsp]
	call	QWORD PTR __imp_SetDlgItemTextA

; 74   : 			SetDlgItemText(hwndDlg, DLOG_Manifest_Text, g_manifest.c_str());

	lea	rcx, OFFSET FLAT:g_manifest
	call	QWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
	mov	r8, rax
	mov	edx, 5
	mov	rcx, QWORD PTR hwndDlg$[rsp]
	call	QWORD PTR __imp_SetDlgItemTextA

; 75   : 
; 76   : 			return TRUE;

	mov	eax, 1
	jmp	$LN11@DialogProc
$LN7@DialogProc:

; 77   : 
; 78   :         case WM_COMMAND: 
; 79   : 			const WORD item_clicked = LOWORD(wParam);

	mov	rax, QWORD PTR wParam$[rsp]
	and	rax, 65535				; 0000ffffH
	mov	WORD PTR item_clicked$126601[rsp], ax

; 80   : 
; 81   : 			if(item_clicked == DLOG_OK || item_clicked == DLOG_Cancel)

	movzx	eax, WORD PTR item_clicked$126601[rsp]
	cmp	eax, 1
	je	SHORT $LN5@DialogProc
	movzx	eax, WORD PTR item_clicked$126601[rsp]
	cmp	eax, 2
	jne	SHORT $LN6@DialogProc
$LN5@DialogProc:

; 82   : 			{
; 83   : 				g_item_clicked = item_clicked;

	movzx	eax, WORD PTR item_clicked$126601[rsp]
	mov	WORD PTR g_item_clicked, ax

; 84   : 
; 85   : 				switch(item_clicked) 

	movzx	eax, WORD PTR item_clicked$126601[rsp]
	mov	DWORD PTR tv87[rsp], eax
	cmp	DWORD PTR tv87[rsp], 1
	je	SHORT $LN2@DialogProc
	cmp	DWORD PTR tv87[rsp], 2
	je	SHORT $LN1@DialogProc
	jmp	SHORT $LN3@DialogProc
$LN2@DialogProc:

; 86   : 				{ 
; 87   : 					case DLOG_OK: 
; 88   : 						SetStrFromField(hwndDlg, DLOG_Layer_Text, g_layer);

	lea	r8, OFFSET FLAT:g_layer
	mov	edx, 3
	mov	rcx, QWORD PTR hwndDlg$[rsp]
	call	?SetStrFromField@@YAXPEAUHWND__@@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; SetStrFromField

; 89   : 						SetStrFromField(hwndDlg, DLOG_Selection_Text, g_selection);

	lea	r8, OFFSET FLAT:g_selection
	mov	edx, 4
	mov	rcx, QWORD PTR hwndDlg$[rsp]
	call	?SetStrFromField@@YAXPEAUHWND__@@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; SetStrFromField

; 90   : 						SetStrFromField(hwndDlg, DLOG_Manifest_Text, g_manifest);

	lea	r8, OFFSET FLAT:g_manifest
	mov	edx, 5
	mov	rcx, QWORD PTR hwndDlg$[rsp]
	call	?SetStrFromField@@YAXPEAUHWND__@@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; SetStrFromField
$LN1@DialogProc:

; 91   : 
; 92   : 					case DLOG_Cancel:
; 93   : 
; 94   : 						//PostMessage((HWND)hwndDlg, WM_QUIT, (WPARAM)WA_ACTIVE, lParam);
; 95   : 						EndDialog(hwndDlg, 0);

	xor	edx, edx
	mov	rcx, QWORD PTR hwndDlg$[rsp]
	call	QWORD PTR __imp_EndDialog

; 96   : 						//DestroyWindow(hwndDlg); 
; 97   : 
; 98   : 						return TRUE;

	mov	eax, 1
	jmp	SHORT $LN11@DialogProc
$LN3@DialogProc:
$LN6@DialogProc:
$LN9@DialogProc:

; 99   : 				} 
; 100  : 			}
; 101  :     } 
; 102  : 
; 103  :     return FALSE; 

	xor	eax, eax
$LN11@DialogProc:

; 104  : }

	add	rsp, 56					; 00000038H
	ret	0
?DialogProc@@YAHPEAUHWND__@@I_K_J@Z ENDP		; DialogProc
_TEXT	ENDS
EXTRN	__imp_free:PROC
EXTRN	__imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z:PROC
EXTRN	__imp__wassert:PROC
EXTRN	__imp_malloc:PROC
EXTRN	__imp_SendMessageA:PROC
EXTRN	__imp_GetDlgItem:PROC
pdata	SEGMENT
$pdata$?SetStrFromField@@YAXPEAUHWND__@@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel ?SetStrFromField@@YAXPEAUHWND__@@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	imagerel ?SetStrFromField@@YAXPEAUHWND__@@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z+207
	DD	imagerel $unwind$?SetStrFromField@@YAXPEAUHWND__@@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?SetStrFromField@@YAXPEAUHWND__@@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 021301H
	DD	0300f7213H
; Function compile flags: /Odtp
xdata	ENDS
_TEXT	SEGMENT
len$ = 32
buf$ = 40
copied$126582 = 48
hDlg$ = 80
nIDDlgItem$ = 88
str$ = 96
?SetStrFromField@@YAXPEAUHWND__@@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; SetStrFromField

; 46   : {

	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	sub	rsp, 64					; 00000040H

; 47   : 	const int len = SendMessage(GetDlgItem(hDlg, nIDDlgItem), WM_GETTEXTLENGTH, (WPARAM)0, (LPARAM)0) + 1;

	mov	edx, DWORD PTR nIDDlgItem$[rsp]
	mov	rcx, QWORD PTR hDlg$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 14
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageA
	add	rax, 1
	mov	DWORD PTR len$[rsp], eax

; 48   : 
; 49   : 	char *buf = (char *)malloc(len * sizeof(char));

	movsxd	rcx, DWORD PTR len$[rsp]
	call	QWORD PTR __imp_malloc
	mov	QWORD PTR buf$[rsp], rax

; 50   : 
; 51   : 	if(buf)

	cmp	QWORD PTR buf$[rsp], 0
	je	SHORT $LN1@SetStrFrom

; 52   : 	{
; 53   : 		const UINT copied = SendMessage(GetDlgItem(hDlg, nIDDlgItem), WM_GETTEXT, (WPARAM)len, (LPARAM)buf);

	movsxd	rbx, DWORD PTR len$[rsp]
	mov	edx, DWORD PTR nIDDlgItem$[rsp]
	mov	rcx, QWORD PTR hDlg$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	r9, QWORD PTR buf$[rsp]
	mov	r8, rbx
	mov	edx, 13
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageA
	mov	DWORD PTR copied$126582[rsp], eax

; 54   : 
; 55   : 		assert(copied == len - 1);

	mov	eax, DWORD PTR len$[rsp]
	sub	eax, 1
	cmp	DWORD PTR copied$126582[rsp], eax
	je	SHORT $LN4@SetStrFrom
	mov	r8d, 55					; 00000037H
	lea	rdx, OFFSET FLAT:$SG126586
	lea	rcx, OFFSET FLAT:$SG126587
	call	QWORD PTR __imp__wassert
	xor	r11d, r11d
$LN4@SetStrFrom:

; 56   : 
; 57   : 		str = buf;

	mov	rdx, QWORD PTR buf$[rsp]
	mov	rcx, QWORD PTR str$[rsp]
	call	QWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z

; 58   : 
; 59   : 		free(buf);

	mov	rcx, QWORD PTR buf$[rsp]
	call	QWORD PTR __imp_free
$LN1@SetStrFrom:

; 60   : 	}
; 61   : }

	add	rsp, 64					; 00000040H
	pop	rbx
	ret	0
?SetStrFromField@@YAXPEAUHWND__@@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; SetStrFromField
_TEXT	ENDS
PUBLIC	DllMain
; Function compile flags: /Odtp
_TEXT	SEGMENT
hInstance$ = 8
fdwReason$ = 16
lpReserved$ = 24
DllMain	PROC

; 137  : {

	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx

; 138  : 	if (fdwReason == DLL_PROCESS_ATTACH)

	cmp	DWORD PTR fdwReason$[rsp], 1
	jne	SHORT $LN1@DllMain

; 139  : 		hDllInstance = (HINSTANCE)hInstance;

	mov	rax, QWORD PTR hInstance$[rsp]
	mov	QWORD PTR hDllInstance, rax
$LN1@DllMain:

; 140  : 
; 141  : 	return TRUE;   // Indicate that the DLL was initialized successfully.

	mov	eax, 1

; 142  : }

	ret	0
DllMain	ENDP
_TEXT	ENDS
PUBLIC	??0_Has_debug_it@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Has_debug_it::_Has_debug_it
EXTRN	atexit:PROC
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_Has_debug_it@01@@Z:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Eg_layer@@YAXXZ DD imagerel ??__Eg_layer@@YAXXZ
	DD	imagerel ??__Eg_layer@@YAXXZ+49
	DD	imagerel $unwind$??__Eg_layer@@YAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Eg_layer@@YAXXZ DD 010401H
	DD	06204H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ??__Eg_layer@@YAXXZ
text$yc	SEGMENT
$T132660 = 32
??__Eg_layer@@YAXXZ PROC				; `dynamic initializer for 'g_layer'', COMDAT

; 40   : static std::string g_layer;

	sub	rsp, 56					; 00000038H
	mov	dl, 1
	lea	rcx, QWORD PTR $T132660[rsp]
	call	??0_Has_debug_it@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Has_debug_it::_Has_debug_it
	movzx	edx, BYTE PTR [rax]
	lea	rcx, OFFSET FLAT:g_layer
	call	QWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_Has_debug_it@01@@Z
	lea	rcx, OFFSET FLAT:??__Fg_layer@@YAXXZ	; `dynamic atexit destructor for 'g_layer''
	call	atexit
	add	rsp, 56					; 00000038H
	ret	0
??__Eg_layer@@YAXXZ ENDP				; `dynamic initializer for 'g_layer''
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xstring
text$yc	ENDS
;	COMDAT ??0_Has_debug_it@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_N@Z
_TEXT	SEGMENT
this$ = 8
_Val$ = 16
??0_Has_debug_it@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Has_debug_it::_Has_debug_it, COMDAT

; 555  : 		explicit _Has_debug_it(bool _Val): _Value(_Val) { }

	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	mov	rcx, QWORD PTR this$[rsp]
	movzx	eax, BYTE PTR _Val$[rsp]
	mov	BYTE PTR [rcx], al
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0_Has_debug_it@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Has_debug_it::_Has_debug_it
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\brendan bolles\documents\development\proexr\src\aftereffects\win\cryptomatte_ae_dialog_win.cpp
pdata	SEGMENT
$pdata$??__Eg_selection@@YAXXZ DD imagerel ??__Eg_selection@@YAXXZ
	DD	imagerel ??__Eg_selection@@YAXXZ+49
	DD	imagerel $unwind$??__Eg_selection@@YAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Eg_selection@@YAXXZ DD 010401H
	DD	06204H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ??__Eg_selection@@YAXXZ
text$yc	SEGMENT
$T132670 = 32
??__Eg_selection@@YAXXZ PROC				; `dynamic initializer for 'g_selection'', COMDAT

; 41   : static std::string g_selection;

	sub	rsp, 56					; 00000038H
	mov	dl, 1
	lea	rcx, QWORD PTR $T132670[rsp]
	call	??0_Has_debug_it@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Has_debug_it::_Has_debug_it
	movzx	edx, BYTE PTR [rax]
	lea	rcx, OFFSET FLAT:g_selection
	call	QWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_Has_debug_it@01@@Z
	lea	rcx, OFFSET FLAT:??__Fg_selection@@YAXXZ ; `dynamic atexit destructor for 'g_selection''
	call	atexit
	add	rsp, 56					; 00000038H
	ret	0
??__Eg_selection@@YAXXZ ENDP				; `dynamic initializer for 'g_selection''
text$yc	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Eg_manifest@@YAXXZ DD imagerel ??__Eg_manifest@@YAXXZ
	DD	imagerel ??__Eg_manifest@@YAXXZ+49
	DD	imagerel $unwind$??__Eg_manifest@@YAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Eg_manifest@@YAXXZ DD 010401H
	DD	06204H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ??__Eg_manifest@@YAXXZ
text$yc	SEGMENT
$T132677 = 32
??__Eg_manifest@@YAXXZ PROC				; `dynamic initializer for 'g_manifest'', COMDAT

; 42   : static std::string g_manifest;

	sub	rsp, 56					; 00000038H
	mov	dl, 1
	lea	rcx, QWORD PTR $T132677[rsp]
	call	??0_Has_debug_it@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Has_debug_it::_Has_debug_it
	movzx	edx, BYTE PTR [rax]
	lea	rcx, OFFSET FLAT:g_manifest
	call	QWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_Has_debug_it@01@@Z
	lea	rcx, OFFSET FLAT:??__Fg_manifest@@YAXXZ	; `dynamic atexit destructor for 'g_manifest''
	call	atexit
	add	rsp, 56					; 00000038H
	ret	0
??__Eg_manifest@@YAXXZ ENDP				; `dynamic initializer for 'g_manifest''
text$yc	ENDS
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Fg_layer@@YAXXZ DD imagerel ??__Fg_layer@@YAXXZ
	DD	imagerel ??__Fg_layer@@YAXXZ+22
	DD	imagerel $unwind$??__Fg_layer@@YAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Fg_layer@@YAXXZ DD 010401H
	DD	04204H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ??__Fg_layer@@YAXXZ
text$yd	SEGMENT
??__Fg_layer@@YAXXZ PROC				; `dynamic atexit destructor for 'g_layer'', COMDAT
	sub	rsp, 40					; 00000028H
	lea	rcx, OFFSET FLAT:g_layer
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	ret	0
??__Fg_layer@@YAXXZ ENDP				; `dynamic atexit destructor for 'g_layer''
text$yd	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Fg_selection@@YAXXZ DD imagerel ??__Fg_selection@@YAXXZ
	DD	imagerel ??__Fg_selection@@YAXXZ+22
	DD	imagerel $unwind$??__Fg_selection@@YAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Fg_selection@@YAXXZ DD 010401H
	DD	04204H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ??__Fg_selection@@YAXXZ
text$yd	SEGMENT
??__Fg_selection@@YAXXZ PROC				; `dynamic atexit destructor for 'g_selection'', COMDAT
	sub	rsp, 40					; 00000028H
	lea	rcx, OFFSET FLAT:g_selection
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	ret	0
??__Fg_selection@@YAXXZ ENDP				; `dynamic atexit destructor for 'g_selection''
text$yd	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Fg_manifest@@YAXXZ DD imagerel ??__Fg_manifest@@YAXXZ
	DD	imagerel ??__Fg_manifest@@YAXXZ+22
	DD	imagerel $unwind$??__Fg_manifest@@YAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Fg_manifest@@YAXXZ DD 010401H
	DD	04204H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ??__Fg_manifest@@YAXXZ
text$yd	SEGMENT
??__Fg_manifest@@YAXXZ PROC				; `dynamic atexit destructor for 'g_manifest'', COMDAT
	sub	rsp, 40					; 00000028H
	lea	rcx, OFFSET FLAT:g_manifest
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	ret	0
??__Fg_manifest@@YAXXZ ENDP				; `dynamic atexit destructor for 'g_manifest''
text$yd	ENDS
_BSS	SEGMENT
	ALIGN	4

g_layer	DB	030H DUP (?)
g_manifest DB	030H DUP (?)
g_selection DB	030H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
g_layer$initializer$ DQ FLAT:??__Eg_layer@@YAXXZ
g_selection$initializer$ DQ FLAT:??__Eg_selection@@YAXXZ
g_manifest$initializer$ DQ FLAT:??__Eg_manifest@@YAXXZ
CRT$XCU	ENDS
END
